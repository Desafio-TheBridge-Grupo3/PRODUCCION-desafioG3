# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - client

resources:
- repo: self

variables:

  # VARIABLES ENTRE PIPELINES
  # ---------------------------------------------------------------------------
  DEPLOY-STAGE: 'prod'
  API-TO-DEPLOY: 'client'
  # ---------------------------------------------------------------------------

# Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: ''
  imageRepository: '$(API-TO-DEPLOY)-severalapp'
  registryname: 'severalcontainers-$(DEPLOY-STAGE)'
  containerRegistry: '$(registryname).azurecr.io'
  dockerfilePath: '**/$(API-TO-DEPLOY)/Dockerfile_client'
  tag: '$(DEPLOY-STAGE).$(Build.BuildId)'

  # Container Apps Variables
  azureSubscription: 'conexion-azure-cloud'
  resourceGroup: 'RECURSOS-severalenergy-$(DEPLOY-STAGE)'
  containerAppEnvironment: 'containerenvironment-severalenergy-$(DEPLOY-STAGE)'
  containerAppName: '$(API-TO-DEPLOY)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:

    # Tarea que contenedoriza el código de
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    # Tarea que crea una nueva revisión de la Api contenedorizada
    - task: AzureContainerApps@1
      displayName: Update Container App
      inputs:
        azureSubscription: $(azureSubscription)
        location: europewest
        acrName: $(registryname)
        imageToDeploy: $(containerRegistry)/$(imageRepository):$(tag)
        resourceGroup: $(resourceGroup)
        containerAppEnvironment: $(containerAppEnvironment)
        containerAppName: $(containerAppName)
        disableTelemetry: false